@import 'layout';
@import 'variables';

.eventCard {
  --background-color-event-card: var(--color-white);
  --color-title: var(--color-black-90);
  --color-description: var(--color-black-90);
  --fontsize-title: var(--fontsize-heading-xs);
  --fontsize-description: var(--fontsize-subtitle);
  --fontweight-title: bold;
  --fontweight-description: normal;
  --height-image: 13.125em;
  --height-image-mobile: 14.5rem;
  --lineheight-title: var(--lineheight-l);
  --lineheight-description: var(--lineheight-l);
  --margin-right-icon: var(--spacing-2-xs);
  --padding-content-wrapper: var(--spacing-s);
  --size-icon: 1.25rem;
  --width-image: 12.25rem;

  display: grid;
  background-color: var(--background-color-event-card);
  text-decoration: none;
  color: black;
  position: relative; //  Position context for the linkâ€™s pseudo-element.

  @include respond_above(m) {
    grid-template-columns: var(--width-image) 1fr;
  }

  /**
 * 1. Display interactivity on hover/focus by highlighting the border.
 */
  &:hover,
  &:focus-within {
    box-shadow: 0 0 0 0.2rem var(--color-black-30); /* 1 */
  }

  /**
 * 1. Use a pseudo-element to expand the hitbox of the link over
 *    the whole card.
 * 2. Expand the hitbox over the whole card.
 * 3. Place the pseudo-element on top of the whole card.
 * 4. Show that the card is interactive.
 */
  .primaryAction {
    z-index: 1; /* 3 */
    cursor: pointer; /* 4 */

    &::after {
      content: ''; /* 1 */
      inset: 0; /* 2 */
      position: absolute; /* 2 */
    }
  }

  a.primaryAction {
    color: var(--color-title);
    text-decoration: none;

    &:hover,
    &:focus,
    &:focus-within {
      text-decoration: underline;
    }
  }

  /**
 * 1. Place the secondary action on top of the card.
 */
  .secondaryAction {
    position: relative; /* 1 */
    z-index: 2; /* 1 */
  }

  .imageWrapper {
    height: var(--height-image-mobile);
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;

    @include respond_above(m) {
      height: var(--height-image);
    }
  }

  .contentWrapper {
    padding: var(--padding-content-wrapper);
    display: grid;
    grid-template-rows: 1fr auto;
  }

  .title {
    color: var(--color-title);
    font-size: var(--fontsize-title);
    font-weight: var(--fontweight-title);
    line-height: var(--lineheight-title);
  }

  .description {
    color: var(--color-description);
    font-size: var(--fontsize-description);
    font-weight: var(--fontweight-description);
    line-height: var(--lineheight-description);
  }

  .occurrenceInfoWrapper {
    display: grid;
    grid-gap: var(--spacing-m);
    margin-top: var(--spacing-m);
    @include respond_above(m) {
      grid-template-columns: 1fr 1fr;
    }
  }

  .textWithIcon {
    display: flex;

    svg {
      height: var(--size-icon);
      width: var(--size-icon);
      margin-right: var(--margin-right-icon);
    }
  }

  ul.occurrenceTimes {
    margin: 0;
    padding: 0;
    list-style: none;

    li {
      margin-bottom: var(--spacing-xs);
    }
  }

  .multipleOccurrenceButton {
    border: 0 none transparent;
    min-height: unset;
    height: fit-content;
    padding: var(--spacing-3-xs);
    position: relative;
    span {
      padding: 0;
      margin: 0;
      font-size: small;
    }
  }

  .multipleOccurrenceContainer {
    display: block;
  }
}
